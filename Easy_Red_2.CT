<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>1</ID>
      <Description>"refile rapid fire"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048,"GameAssembly.dll"+69F27C)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
nop
nop
nop
nop
nop
nop
nop
originalcode:
// mov byte ptr [rbx+000000CA],01

exit:
jmp returnhere

"GameAssembly.dll"+69F27C:
jmp newmem
nop 2
returnhere:
[DISABLE]
dealloc(newmem)

"GameAssembly.dll"+69F27C:
  db C6 83 CA 00 00 00 01  // Restore original instruction (MOV BYTE PTR [RBX+000000CA],01)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>5</ID>
      <Description>"machine gun inf ammo"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048,"GameAssembly.dll"+6BCA29)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
add dword ptr [rcx+54],1  // Adds 1 before decrement, preventing ammo change
originalcode:
dec [rcx+54]
mov al,01

exit:
jmp returnhere

"GameAssembly.dll"+6BCA29:
jmp newmem
returnhere:

[DISABLE]
dealloc(newmem)

"GameAssembly.dll"+6BCA29:
  db FF 49 54 B0 01 // Restore original bytes (DEC [RCX+54], MOV AL,01)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"refile gun inf ammo"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
alloc(newmem,2048,"GameAssembly.dll"+69EE5D)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//place your code here
  add ecx,1   // Adds 1 before the subtraction, canceling out the effect

originalcode:
sub ecx,01
mov eax,r14d

exit:
jmp returnhere

"GameAssembly.dll"+69EE5D:
jmp newmem
nop
returnhere:
[DISABLE]
dealloc(newmem)

"GameAssembly.dll"+69EE5D:
  db 83 E9 01 41 8B C6 // Restore original bytes (SUB ECX,01 + MOV EAX,R14D)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"pointerscan result"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>"GameAssembly.dll"+02D833C8</Address>
      <Offsets>
        <Offset>1D8</Offset>
        <Offset>20</Offset>
        <Offset>D8</Offset>
        <Offset>18</Offset>
        <Offset>0</Offset>
        <Offset>B8</Offset>
        <Offset>F40</Offset>
      </Offsets>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of movss [rbx+00000120],xmm1</Description>
      <AddressString>GameAssembly.dll+69EEB4</AddressString>
      <Before>
        <Byte>C8</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>CA</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>8B</Byte>
        <Byte>20</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>44</Byte>
        <Byte>38</Byte>
        <Byte>75</Byte>
        <Byte>00</Byte>
        <Byte>74</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov byte ptr [rdi+000001DA],01</Description>
      <AddressString>GameAssembly.dll+6CD8CD</AddressString>
      <Before>
        <Byte>84</Byte>
        <Byte>2F</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>C6</Byte>
        <Byte>87</Byte>
        <Byte>DA</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>43</Byte>
        <Byte>28</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov byte ptr [rbx+000000CA],01</Description>
      <AddressString>GameAssembly.dll+69F27C</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>74</Byte>
        <Byte>07</Byte>
      </Before>
      <Actual>
        <Byte>C6</Byte>
        <Byte>83</Byte>
        <Byte>CA</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>0D</Byte>
        <Byte>96</Byte>
        <Byte>E6</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
</CheatTable>
