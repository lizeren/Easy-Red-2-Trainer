<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>10</ID>
      <Description>"机枪无限子弹"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Easy Red 2
  Version: 
  Date   : 2025-03-30
  Author : lizer

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,GameAssembly.dll,FF 49 54 B0 01) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:
add dword ptr [rcx+54],1  // Adds 1 before decrement, preventing ammo change
code:
  dec [rcx+54]
  mov al,01
  jmp return

INJECT:
  jmp newmem
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db FF 49 54 B0 01

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+6C4479

GameAssembly.dll+6C446A: 5F                    - pop rdi
GameAssembly.dll+6C446B: C3                    - ret 
GameAssembly.dll+6C446C: CC                    - int 3 
GameAssembly.dll+6C446D: CC                    - int 3 
GameAssembly.dll+6C446E: CC                    - int 3 
GameAssembly.dll+6C446F: CC                    - int 3 
GameAssembly.dll+6C4470: 83 79 54 00           - cmp dword ptr [rcx+54],00
GameAssembly.dll+6C4474: 7F 03                 - jg GameAssembly.dll+6C4479
GameAssembly.dll+6C4476: 32 C0                 - xor al,al
GameAssembly.dll+6C4478: C3                    - ret 
// ---------- INJECTING HERE ----------
GameAssembly.dll+6C4479: FF 49 54              - dec [rcx+54]
// ---------- DONE INJECTING  ----------
GameAssembly.dll+6C447C: B0 01                 - mov al,01
GameAssembly.dll+6C447E: C3                    - ret 
GameAssembly.dll+6C447F: CC                    - int 3 
GameAssembly.dll+6C4480: 40 53                 - push rbx
GameAssembly.dll+6C4482: 48 83 EC 20           - sub rsp,20
GameAssembly.dll+6C4486: 80 3D E7 9C 6B 02 00  - cmp byte ptr [GameAssembly.dll+2D7E174],00
GameAssembly.dll+6C448D: 48 8B D9              - mov rbx,rcx
GameAssembly.dll+6C4490: 75 2B                 - jne GameAssembly.dll+6C44BD
GameAssembly.dll+6C4492: 48 8D 0D C7 D6 57 02  - lea rcx,[GameAssembly.dll+2C41B60]
GameAssembly.dll+6C4499: E8 92 35 C0 FF        - call GameAssembly.dll+2C7A30
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>12</ID>
      <Description>"步枪无限子弹"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Easy Red 2
  Version: 
  Date   : 2025-03-30
  Author : lizer

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,GameAssembly.dll,83 E9 01 41 8B C6) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:
add ecx,1   // Adds 1 before the subtraction, canceling out the effect
code:
  sub ecx,01
  mov eax,r14d
  jmp return

INJECT:
  jmp newmem
  nop
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 83 E9 01 41 8B C6

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+6A68AD

GameAssembly.dll+6A6879: 8B 93 C0 00 00 00     - mov edx,[rbx+000000C0]
GameAssembly.dll+6A687F: 2B 93 C4 00 00 00     - sub edx,[rbx+000000C4]
GameAssembly.dll+6A6885: 4D 8B 88 78 02 00 00  - mov r9,[r8+00000278]
GameAssembly.dll+6A688C: 4D 8B 80 80 02 00 00  - mov r8,[r8+00000280]
GameAssembly.dll+6A6893: 41 FF D1              - call r9
GameAssembly.dll+6A6896: 03 C6                 - add eax,esi
GameAssembly.dll+6A6898: EB 1C                 - jmp GameAssembly.dll+6A68B6
GameAssembly.dll+6A689A: 44 39 B3 C4 00 00 00  - cmp [rbx+000000C4],r14d
GameAssembly.dll+6A68A1: 0F 8E 08 06 00 00     - jng GameAssembly.dll+6A6EAF
GameAssembly.dll+6A68A7: 8B 8B C4 00 00 00     - mov ecx,[rbx+000000C4]
// ---------- INJECTING HERE ----------
GameAssembly.dll+6A68AD: 83 E9 01              - sub ecx,01
// ---------- DONE INJECTING  ----------
GameAssembly.dll+6A68B0: 41 8B C6              - mov eax,r14d
GameAssembly.dll+6A68B3: 0F 49 C1              - cmovns eax,ecx
GameAssembly.dll+6A68B6: 89 83 C4 00 00 00     - mov [rbx+000000C4],eax
GameAssembly.dll+6A68BC: 33 C9                 - xor ecx,ecx
GameAssembly.dll+6A68BE: E8 9D 71 A9 01        - call GameAssembly.dll+213DA60
GameAssembly.dll+6A68C3: 48 8B 83 18 01 00 00  - mov rax,[rbx+00000118]
GameAssembly.dll+6A68CA: 0F 28 D0              - movaps xmm2,xmm0
GameAssembly.dll+6A68CD: 48 85 C0              - test rax,rax
GameAssembly.dll+6A68D0: 0F 84 DD 05 00 00     - je GameAssembly.dll+6A6EB3
GameAssembly.dll+6A68D6: 0F B6 8B 14 01 00 00  - movzx ecx,byte ptr [rbx+00000114]
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"步枪无换弹"</Description>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Easy Red 2
  Version: 
  Date   : 2025-03-30
  Author : lizer

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(INJECT,GameAssembly.dll,C6 83 CA 00 00 00 01) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:
jmp return
code:
  mov byte ptr [rbx+000000CA],01
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db C6 83 CA 00 00 00 01

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: GameAssembly.dll+6A6CCC

GameAssembly.dll+6A6C9D: 48 8B D0                 - mov rdx,rax
GameAssembly.dll+6A6CA0: 48 8B CB                 - mov rcx,rbx
GameAssembly.dll+6A6CA3: E8 98 E3 A8 01           - call UnityEngine.MonoBehaviour.StartCoroutine
GameAssembly.dll+6A6CA8: 48 8B 07                 - mov rax,[rdi]
GameAssembly.dll+6A6CAB: 48 8B CF                 - mov rcx,rdi
GameAssembly.dll+6A6CAE: F3 0F 10 8B 24 01 00 00  - movss xmm1,[rbx+00000124]
GameAssembly.dll+6A6CB6: 4C 8B 80 10 02 00 00     - mov r8,[rax+00000210]
GameAssembly.dll+6A6CBD: FF 90 08 02 00 00        - call qword ptr [rax+00000208]
GameAssembly.dll+6A6CC3: 44 38 B3 C8 00 00 00     - cmp [rbx+000000C8],r14b
GameAssembly.dll+6A6CCA: 74 07                    - je GameAssembly.dll+6A6CD3
// ---------- INJECTING HERE ----------
GameAssembly.dll+6A6CCC: C6 83 CA 00 00 00 01     - mov byte ptr [rbx+000000CA],01
// ---------- DONE INJECTING  ----------
GameAssembly.dll+6A6CD3: 48 8B 0D C6 0F 53 02     - mov rcx,[GameAssembly.dll+2BD7CA0]
GameAssembly.dll+6A6CDA: 48 8B AE 80 03 00 00     - mov rbp,[rsi+00000380]
GameAssembly.dll+6A6CE1: 44 39 B1 E0 00 00 00     - cmp [rcx+000000E0],r14d
GameAssembly.dll+6A6CE8: 75 05                    - jne GameAssembly.dll+6A6CEF
GameAssembly.dll+6A6CEA: E8 91 31 BF FF           - call GameAssembly.il2cpp_runtime_class_init
GameAssembly.dll+6A6CEF: 33 D2                    - xor edx,edx
GameAssembly.dll+6A6CF1: 48 8B CD                 - mov rcx,rbp
GameAssembly.dll+6A6CF4: E8 77 09 A9 01           - call UnityEngine.Object.op_Implicit
GameAssembly.dll+6A6CF9: 84 C0                    - test al,al
GameAssembly.dll+6A6CFB: 74 28                    - je GameAssembly.dll+6A6D25
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"血量"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>"GameAssembly.dll"+02BD7FF8</Address>
      <Offsets>
        <Offset>24</Offset>
        <Offset>18</Offset>
        <Offset>80</Offset>
        <Offset>B8</Offset>
        <Offset>F0</Offset>
        <Offset>98</Offset>
      </Offsets>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of movss [rbx+00000120],xmm1</Description>
      <AddressString>GameAssembly.dll+69EEB4</AddressString>
      <Before>
        <Byte>C8</Byte>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>58</Byte>
        <Byte>CA</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>8B</Byte>
        <Byte>20</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>44</Byte>
        <Byte>38</Byte>
        <Byte>75</Byte>
        <Byte>00</Byte>
        <Byte>74</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov byte ptr [rdi+000001DA],01</Description>
      <AddressString>GameAssembly.dll+6CD8CD</AddressString>
      <Before>
        <Byte>84</Byte>
        <Byte>2F</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>C6</Byte>
        <Byte>87</Byte>
        <Byte>DA</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>43</Byte>
        <Byte>28</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of mov byte ptr [rbx+000000CA],01</Description>
      <AddressString>GameAssembly.dll+69F27C</AddressString>
      <Before>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>74</Byte>
        <Byte>07</Byte>
      </Before>
      <Actual>
        <Byte>C6</Byte>
        <Byte>83</Byte>
        <Byte>CA</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>0D</Byte>
        <Byte>96</Byte>
        <Byte>E6</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jmp 7FF8B4940000</Description>
      <AddressString>GameAssembly.dll+6FE228</AddressString>
      <Before>
        <Byte>01</Byte>
        <Byte>76</Byte>
        <Byte>07</Byte>
        <Byte>33</Byte>
        <Byte>C9</Byte>
      </Before>
      <Actual>
        <Byte>E9</Byte>
        <Byte>D3</Byte>
        <Byte>1D</Byte>
        <Byte>8E</Byte>
        <Byte>FF</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>0D</Byte>
        <Byte>D4</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of jmp 7FF8F3570000</Description>
      <AddressString>GameAssembly.dll+6D549D</AddressString>
      <Before>
        <Byte>84</Byte>
        <Byte>2F</Byte>
        <Byte>02</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>E9</Byte>
        <Byte>5E</Byte>
        <Byte>AB</Byte>
        <Byte>8E</Byte>
        <Byte>FF</Byte>
      </Actual>
      <After>
        <Byte>66</Byte>
        <Byte>90</Byte>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>43</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of call UnityEngine.Random.Range</Description>
      <AddressString>GameAssembly.dll+706B68</AddressString>
      <Before>
        <Byte>05</Byte>
        <Byte>78</Byte>
        <Byte>90</Byte>
        <Byte>CB</Byte>
        <Byte>01</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>23</Byte>
        <Byte>2B</Byte>
        <Byte>A3</Byte>
        <Byte>01</Byte>
      </Actual>
      <After>
        <Byte>0F</Byte>
        <Byte>28</Byte>
        <Byte>74</Byte>
        <Byte>24</Byte>
        <Byte>20</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
    <Structure Name="String" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="16" Vartype="4 Bytes" Bytesize="4" OffsetHex="00000010" Description="Length" DisplayMethod="unsigned integer"/>
        <Element Offset="20" Vartype="Unicode String" Bytesize="128" OffsetHex="00000014" Description="Value" DisplayMethod="unsigned integer"/>
      </Elements>
    </Structure>
  </Structures>
  <DisassemblerComments>
    <DisassemblerComment>
      <Address>"GameAssembly.dll"+70675B</Address>
      <Comment>apply any damage/health regen

</Comment>
    </DisassemblerComment>
  </DisassemblerComments>
</CheatTable>
